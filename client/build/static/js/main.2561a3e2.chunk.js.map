{"version":3,"sources":["auth/auth.js","assets/images/logo.png","assets/images/hero.jpg","layouts/auth/auth-layout.js","layouts/auth/auth-route.js","auth/protectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Auth","this","email","password","authenticated","cb","axios","get","process","auth","username","AuthLayout","props","Container","className","fluid","Row","Col","md","style","backgroundColor","Jumbotron","backgroundImage","heroImage","backgroundSize","boxShadow","marginTop","marginBottom","sm","src","logo","children","AuthLayoutRoutes","Component","component","rest","render","ProtectedRoute","isAuthenticated","to","pathname","state","from","location","Home","lazy","Login","App","fallback","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+JAGMA,E,WACJ,aAAe,oBAEbC,KAAKC,MAAQ,GACbD,KAAKE,SAAW,GAChBF,KAAKG,eAAgB,E,2FAIXF,EAAOC,EAAUE,G,wEAG3BJ,KAAKC,MAAQA,EACbD,KAAKE,SAAWA,E,kBAISG,IAAMC,IAAIC,uCAAsD,CACrFC,KAAM,CACJC,SAAUR,EACVC,SAAUA,K,cAIdF,KAAKG,eAAgB,E,wDAQvBC,I,iJAGKA,GACLJ,KAAKG,eAAgB,EACrBC,M,wCAIA,OAAOJ,KAAKG,kB,KAID,QAAIJ,G,4LChDJ,MAA0B,iCCA1B,MAA0B,iCCS1B,SAASW,EAAWC,GAC/B,OACI,cAACC,EAAA,EAAD,CAAWC,UAAU,QAAQC,OAAK,EAAlC,SACI,eAACC,EAAA,EAAD,CAAKF,UAAU,QAAf,UAGI,cAACG,EAAA,EAAD,CAAKH,UAAU,4BAA4BI,GAAG,IAAIC,MAAO,CAAEC,gBAAiB,QAA5E,SACI,cAACC,EAAA,EAAD,CAAWP,UAAU,kBAAkBK,MAAO,CAAEG,gBAAgB,OAAD,OAASC,EAAT,KAAuBC,eAAgB,QAASC,UAAW,yCAA1H,SACI,qBAAIX,UAAU,uBAAuBK,MAAO,CAAEO,UAAW,QAAzD,4BAAkF,qBAAKZ,UAAU,aAAf,qBAAlF,2CAIR,cAACG,EAAA,EAAD,CAAKH,UAAU,sDAAsDK,MAAO,CAAEQ,aAAc,SAAWC,GAAG,KAAKV,GAAG,IAAlH,SACI,cAACL,EAAA,EAAD,UACI,cAACG,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAIJ,UAAU,UAAtB,UAEI,qBAAKA,UAAU,cAAf,SACI,qBAAKA,UAAU,UAAUe,IAAKC,MAGjClB,EAAMmB,uBCtBvC,IAWeC,EAXU,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BAC5D,OAEI,aADA,CACC,IAAD,2BAAWA,GAAX,IAAiBC,OAAQ,SAAAxB,GAAK,OAC1B,cAACD,EAAD,UACI,cAACsB,EAAD,eAAerB,W,QCRlByB,EAET,SAAC,GAAuC,IAA1BJ,EAAyB,EAApCC,UAAyBC,EAAW,6BACnC,OAEI,aADA,CACC,IAAD,2BAAWA,GAAX,IAAiBC,OAAQ,SAAAxB,GAErB,OAAIH,IAAK6B,kBACE,cAACL,EAAD,eAAerB,IAIlB,cAAC,IAAD,CAAU2B,GAAI,CACVC,SAAU,IACVC,MAAO,CACHC,KAAM9B,EAAM+B,kBCXtCC,EAAOC,gBAAK,kBAAM,gCAClBC,EAAQD,gBAAK,kBAAM,gCAqBVE,EAnBH,kBAGV,aADA,CACC,IAAD,UAGE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SAGE,eAAC,IAAD,WAGE,cAAC,EAAD,CAAgBC,OAAK,EAACC,KAAK,QAAQhB,UAAWU,IAC9C,cAAC,EAAD,CAAiBM,KAAK,IAAIhB,UAAWY,YCb9BK,G,kBAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCMdQ,IAASxB,OACP,cAAC,IAAMyB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2561a3e2.chunk.js","sourcesContent":["import axios from 'axios';\n\n/* ES6 Class module to create auth class to act as auth interface */\nclass Auth {\n  constructor() {\n    /* Using standard login fields */\n    this.email = '';\n    this.password = '';\n    this.authenticated = false;\n  }\n\n  /* Login/Logout functions with callbacks */\n  async login(email, password, cb) {\n\n    /* Assign constructor values, referenced in other auth operations */\n    this.email = email;\n    this.password = password;\n\n    /* Function to send authentication request to server */\n    try {\n      const response = await axios.get(process.env.REACT_APP_SERVER_URL + '/teachers/login', {\n        auth: {\n          username: email,\n          password: password\n        }\n      });\n\n      this.authenticated = true;\n\n    } catch (error) {\n      \n    }\n\n\n    //this.authenticated = true;\n    cb();\n  }\n\n  logout(cb) {\n    this.authenticated = false;\n    cb();\n  }\n\n  isAuthenticated() {\n    return this.authenticated;\n  }\n}\n\nexport default new Auth();\n","export default __webpack_public_path__ + \"static/media/logo.c49279f8.png\";","export default __webpack_public_path__ + \"static/media/hero.2b4dd23c.jpg\";","import React from \"react\";\n\n/* Ui imports */\nimport {\n    Container, Jumbotron, Row, Col, //Layout\n} from 'reactstrap';\nimport logo from './../../assets/images/logo.png';\nimport heroImage from './../../assets/images/hero.jpg';\n\nexport default function AuthLayout(props) {\n    return (\n        <Container className=\"h-100\" fluid>\n            <Row className=\"h-100\">\n\n                {/* Column for jumbotron only displays above mobile*/}\n                <Col className=\"d-none d-md-block m-0 p-0\" md=\"6\" style={{ backgroundColor: 'blue' }}>\n                    <Jumbotron className=\"h-100 rounded-0\" style={{ backgroundImage: `url(${heroImage})`, backgroundSize: 'cover', boxShadow: 'inset 0 0 0 2000px rgba(0, 0, 0, 0.2)' }}>\n                        <h1 className=\"display-3 text-white\" style={{ marginTop: '8rem' }}>Stay on Top of <div className=\"theme-text\">Classes</div> and Focus on What Really Matters</h1>\n                    </Jumbotron>\n                </Col>\n\n                <Col className=\"d-flex align-items-center mt-5 mt-md-0 mx-3 mx-md-0\" style={{ marginBottom: '15rem' }} sm=\"12\" md=\"6\">\n                    <Container>\n                        <Row>\n                            <Col md=\"8\" className=\"mx-auto\">\n\n                                <div className=\"text-center\">\n                                    <img className=\"mx-auto\" src={logo} />\n                                </div>\n\n                                {props.children}\n\n                            </Col>\n                        </Row>\n                    </Container>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\n","/* React + Route API */\nimport React from 'react';\nimport { Route } from 'react-router-dom';\n\n/* Auth layout */\nimport AuthLayout from './auth-layout';\n\n/* Component responsible for loading Auth (Login, Signup) pages in the Auth layout, deconstruct component to render and pass props to it */\nconst AuthLayoutRoutes = ({ component: Component, ...rest }) => {\n    return (\n        /* Use Route API and pass properties, render layout with deconstructed component */\n        <Route {...rest} render={props => (\n            <AuthLayout>\n                <Component {...props} />\n            </AuthLayout>\n        )} />\n    )\n}\n\nexport default AuthLayoutRoutes;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./auth\";\n\n/* Export secure route functional component */\nexport const ProtectedRoute =\n    /* Destructure component from passed argument and pass rest containing the rest */\n    ({ component: Component, ...rest }) => {\n        return (\n            /* Using Route API, pass rest of arguments as props to the component */\n            <Route {...rest} render={props => {\n                /* If route is authenticated using auth class (true), return passed component */\n                if (auth.isAuthenticated()) {\n                    return <Component {...props} />;\n                } else {\n                    /* Otherwise redirect using redirect component from react-router */\n                    return (\n                        <Redirect to={{\n                            pathname: \"/\",\n                            state: {\n                                from: props.location\n                            }\n                        }}\n                        />\n                    );\n                }\n            }}\n            />\n        );\n    };\n","/* import React with code splitting + client side router */\nimport React, { Suspense, lazy } from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\n\n/* Import Layout Routes */\nimport AuthLayoutRoute from './layouts/auth/auth-route';\nimport { ProtectedRoute } from './auth/protectedRoute';\n\n/*render dynamic imports as regular components to enable code splitting (only loading what's needed) */\nconst Home = lazy(() => import('./pages/home'));\nconst Login = lazy(() => import('./pages/login'));\n\nconst App = () => (\n\n  /* using browser router api */\n  <Router>\n\n    {/* Setup fallback when waiting for components to load */}\n    <Suspense fallback={<div>Loading...</div>}>\n\n      {/* Switch searches through route children to find one to match with current url */}\n      <Switch>\n        \n        {/* Using defined protectRoute component and login as default */}\n        <ProtectedRoute exact path=\"/home\" component={Home} />\n        <AuthLayoutRoute path=\"/\" component={Login}/>\n      </Switch>\n    </Suspense>\n  </Router>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* React + App*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/* Import css + sass files */\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './assets/scss/main.scss'\n\n/* Misc imports */\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}